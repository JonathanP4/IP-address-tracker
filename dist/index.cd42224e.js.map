{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,4K,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,qBAAAC,KAAUC,W,MCoE5FC,EAAe,IAjEf,MACGC,YAAcC,SAASC,cAAc,oBACrCC,MAAQF,SAASC,cAAc,QAC/BE,MAAQH,SAASC,cAAc,QAC/BG,SAAWJ,SAASC,cAAc,YAClCI,WAAaL,SAASC,cAAc,aAEpCK,gBAAgBC,GACbC,KAAKL,MAAMM,iBAAiB,UAAU,SAAUC,GAC7CA,EAAEC,iBACFJ,GACH,GACH,CACAK,SACGJ,KAAKT,YAAYc,UAAY,EAChC,CACAC,gBACG,OAAON,KAAKH,WAAWU,KAC1B,CACAC,aAAaC,GACVT,KAAKI,SACLJ,KAAKT,YAAYmB,mBAAmB,YAAaV,KAAKW,eAAeF,GACxE,CACAE,eAAeF,GACZ,MAAMG,EAAS,0KAIAH,EAAKI,oHAILJ,EAAKK,WAAWL,EAAKM,QAAQN,EAAKO,8HAI7BC,OAAOC,KAAKC,IAAIV,EAAKW,SAASC,aAAaC,SAAS,EAAG,0GAI5Db,EAAKc,WAAWC,qDAI/B,OADAC,WAAWzB,KAAK0B,YAAa,KACtBd,CACV,CACAc,cACGlC,SAASC,cAAc,YAAYkC,UAAUC,OAAO,YACvD,CACAC,cAAcC,GAEX,OADAtC,SAASC,cAAc,iBAAiBmC,SACjC,uJAGWG,EAAA9C,4EAC+B6C,sBAEpD,CACAE,YAAYF,GACT9B,KAAKN,MAAMgB,mBAAmB,YAAaV,KAAK6B,cAAcC,IAC9DL,YAAW,KACRjC,SAASC,cAAc,gBAAgBkC,UAAUM,IAAI,UACrD,KACN,GClEHC,EAAiB,IAAAhD,IAAoBL,EAAA,SAAAM,QAA6C,qBAAAC,KAAUC,W,IC0B5F8C,EAAe,IAxBf,MACGC,KAAOC,EAAEC,IAAI,OAEbC,WAAWC,GACRxC,KAAKoC,KAAKK,QAAQD,EAAQ,GAC7B,CAEAE,YACGL,EAAEM,UAAU,mEAAoE,CAC7EC,QAAS,KACTC,MAAM7C,KAAKoC,KAEjB,CACAU,aAAaN,GACV,MAAMO,EAAavD,SAASC,cAAc,wBAEtCsD,GAAYA,EAAWnB,SAE3B,MAAMoB,EAASX,EAAEY,KAAK,CACnBC,QAASnB,EAAAG,KAEZG,EAAEW,OAAOR,EAAQ,CAAES,KAAMD,IAAUH,MAAM7C,KAAKoC,KACjD,GCpBH,MAAMe,EAAYC,eAAgBC,EAAK,IACpC,IAEG,MAAM5C,QCLe2C,eAAgBC,GACxC,IACG,MAAMC,QAAYC,MAAM,iGAA4CF,KAC9D5C,QAAa6C,EAAIE,OAGvB,GAFAC,QAAQC,IAAIjD,IAEP6C,EAAIK,GAAI,MAAM,IAAI/E,MAAM,2CAA2C0E,EAAIM,WAE5E,OAAOnD,CACV,CAAE,MAAOqB,GACN,MAAMA,CACT,CACH,CDPyB+B,CAAkBR,GAE/Bb,EAAS,CAAC/B,EAAKqD,SAAUrD,EAAKsD,WAEpC5B,EAAQI,WAAWC,GACnBL,EAAQW,aAAaN,GAGrBlD,EAAOkB,aAAaC,EACvB,CAAE,MAAOqB,GACN2B,QAAQO,MAAMlC,GACdxC,EAAO0C,YAAY,GAAGF,EAAImC,UAC7B,CACH,EACAd,IAEA,MAAMe,EAAkB,WAErB,MAAMzD,EAAOnB,EAAOgB,gBAEpB6C,EAAU1C,EACb,EAGGnB,EAAOQ,gBAAgBoE,GAKvB/B,EAAQO","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d92a8d972a03fddd.js","node_modules/@parcel/runtime-js/lib/runtime-7e268b68737b2ba9.js","src/js/ipView.js","node_modules/@parcel/runtime-js/lib/runtime-57fa09b5a8e55129.js","src/js/mapView.js","src/js/control.js","src/js/model.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bhuQS\\\":\\\"index.cd42224e.js\\\",\\\"dd8MM\\\":\\\"triangle-exclamation-solid.d5d6e58d.svg\\\",\\\"igQAp\\\":\\\"icon-location.c6b5a81e.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dd8MM\")).toString();","import icon from '../images/triangle-exclamation-solid.svg'\r\nimport { CLOSE_MODAL_TIMEOUT } from './config'\r\n\r\nclass IpView {\r\n   _parentNode = document.querySelector('.details-wrapper')\r\n   _main = document.querySelector('main')\r\n   _form = document.querySelector('form')\r\n   _overlay = document.querySelector('.overlay')\r\n   _textInput = document.querySelector('.input-ip')\r\n\r\n   handleInputData(handler) {\r\n      this._form.addEventListener('submit', function (e) {\r\n         e.preventDefault()\r\n         handler()\r\n      })\r\n   }\r\n   _clear() {\r\n      this._parentNode.innerHTML = ''\r\n   }\r\n   getInputValue() {\r\n      return this._textInput.value\r\n   }\r\n   renderIpInfo(data) {\r\n      this._clear()\r\n      this._parentNode.insertAdjacentHTML('beforeend', this.generateMarkup(data))\r\n   }\r\n   generateMarkup(data) {\r\n      const markup = `\r\n         <div class=\"details collapsed bg-white grid gap-2 p-6 rounded-xl mt-5 w-90\">\r\n            <div>\r\n               <span>IP Address</span>\r\n               <h1>${data.ip_address}</h1>\r\n            </div>\r\n            <div>\r\n               <span>Location</span>\r\n               <h1>${data.region}, ${data.city} ${data.city_geoname_id}</h1>\r\n            </div>\r\n            <div>\r\n               <span>Timezone</span>\r\n               <h1>UTC -${String(Math.abs(data.timezone.gmt_offset)).padStart(2, 0)}:00</h1>\r\n            </div>\r\n            <div>\r\n               <span>ISP</span>\r\n               <h1>${data.connection.isp_name}</h1>\r\n            </div>\r\n         </div>`\r\n      setTimeout(this.showDetails, 300)\r\n      return markup\r\n   }\r\n   showDetails() {\r\n      document.querySelector('.details').classList.remove('collapsed')\r\n   }\r\n   generateError(err) {\r\n      document.querySelector('.error-modal')?.remove()\r\n      return `\r\n      <div class=\"error-modal fixed flex justify-center items-center bg-white p-4\r\n         rounded-xl text-center z-20 \">\r\n            <img src=\"${icon}\" alt=\"warning\">\r\n            <h1 class=\"font-bold text-red-500 w-4/5\">${err}</h1>\r\n      </div>`\r\n   }\r\n   renderError(err) {\r\n      this._main.insertAdjacentHTML('beforeend', this.generateError(err))\r\n      setTimeout(() => {\r\n         document.querySelector('.error-modal').classList.add('hide')\r\n      }, CLOSE_MODAL_TIMEOUT * 1000)\r\n   }\r\n}\r\nexport default new IpView()","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"igQAp\")).toString();","import Marker from '../images/icon-location.svg'\r\n\r\nclass MapView {\r\n   _map = L.map('map')\r\n\r\n   setMapView(coords) {\r\n      this._map.setView(coords, 13);\r\n   }\r\n\r\n   renderMap() {\r\n      L.tileLayer('https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png', {\r\n         maxZoom: 19,\r\n      }).addTo(this._map);\r\n\r\n   }\r\n   renderMarker(coords) {\r\n      const markerIcon = document.querySelector('.leaflet-marker-icon')\r\n\r\n      if (markerIcon) markerIcon.remove()\r\n\r\n      const marker = L.icon({\r\n         iconUrl: Marker,\r\n      })\r\n      L.marker(coords, { icon: marker }).addTo(this._map)\r\n   }\r\n}\r\nexport default new MapView()","import * as model from './model'\r\nimport ipView from './ipView'\r\nimport mapView from './mapView'\r\n\r\nconst ipControl = async function (ip = '') {\r\n   try {\r\n      // fetch data based on provided ip (defaults to user ip)\r\n      const data = await model.fetchIpData(ip)\r\n\r\n      const coords = [data.latitude, data.longitude]\r\n\r\n      mapView.setMapView(coords)\r\n      mapView.renderMarker(coords)\r\n\r\n      // display received data to the user\r\n      ipView.renderIpInfo(data)\r\n   } catch (err) {\r\n      console.error(err);\r\n      ipView.renderError(`${err.message}`)\r\n   }\r\n}\r\nipControl()\r\n\r\nconst ipSearchResults = function () {\r\n   // get ip provided by user (text input value)\r\n   const data = ipView.getInputValue()\r\n\r\n   ipControl(data)\r\n}\r\n\r\nconst eventHandlers = function () {\r\n   ipView.handleInputData(ipSearchResults)\r\n}\r\neventHandlers()\r\n\r\nconst init = function () {\r\n   mapView.renderMap()\r\n}\r\ninit()","import { API_URL, API_KEY } from \"./config\";\r\n\r\nexport const fetchIpData = async function (ip) {\r\n   try {\r\n      const res = await fetch(`${API_URL}?api_key=${API_KEY}&ip_address=${ip}`)\r\n      const data = await res.json()\r\n      console.log(data);\r\n\r\n      if (!res.ok) throw new Error(`Something went wrong! Please try again (${res.status})`)\r\n\r\n      return data\r\n   } catch (err) {\r\n      throw err\r\n   }\r\n}\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b348ac7428b8fa4c$exports","URL","resolve","url","toString","$068218ee77be140f$export$2e2bcd8739ae039","_parentNode","document","querySelector","_main","_form","_overlay","_textInput","handleInputData","handler","this","addEventListener","e","preventDefault","_clear","innerHTML","getInputValue","value","renderIpInfo","data","insertAdjacentHTML","generateMarkup","markup","ip_address","region","city","city_geoname_id","String","Math","abs","timezone","gmt_offset","padStart","connection","isp_name","setTimeout","showDetails","classList","remove","generateError","err","$parcel$interopDefault","renderError","add","$2a5e5a0f823c2705$exports","$fc030077e271dd11$export$2e2bcd8739ae039","_map","L","map","setMapView","coords","setView","renderMap","tileLayer","maxZoom","addTo","renderMarker","markerIcon","marker","icon","iconUrl","$3909f9b280ec3695$var$ipControl","async","ip","res","fetch","json","console","log","ok","status","$0f1d4402dffacf5b$export$d7318226da8527fa","latitude","longitude","error","message","$3909f9b280ec3695$var$ipSearchResults"],"version":3,"file":"index.cd42224e.js.map"}